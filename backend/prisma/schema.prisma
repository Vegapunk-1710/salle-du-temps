generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String @unique
  password String 
  name String @unique
  dob String
  createdAt String
  updatedAt String
  startingWeight Float
  height Int 
  workouts WorkoutsRelations[] 
}

model Workout {
  id String @id @default(uuid())
  imageURL String 
  createdBy String 
  createdAt String
  title String 
  difficulty String
  time Int 
  description String
  exercises ExercisesRelations[]
  users WorkoutsRelations[] 
}

model Exercise {
  id String @id @default(uuid())
  imageURL String
  createdBy String 
  createdAt String
  title String 
  difficulty String
  time Int 
  type String
  tutorial String
  setsreps String
  workouts ExercisesRelations[]
}

model WorkoutsRelations {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  workout   Workout  @relation(fields: [workoutId], references: [id])
  workoutId String

  @@id([userId, workoutId])
}

model ExercisesRelations {
  workout    Workout   @relation(fields: [workoutId], references: [id])
  workoutId  String
  exercise   Exercise  @relation(fields: [exerciseId], references: [id])
  exerciseId String
  order      Int

  @@id([workoutId, exerciseId])
}


model WorkoutProgrssion{
    id String @id @default(uuid())
    createdBy String
    workoutId String
    date String
    time String
  } 

model ExerciseProgression{
    id String @id @default(uuid())
    createdBy  String
    exerciseId String
    date String
    weight Int
    sets Int
    reps Int
  }

model Days {
  id String @id @default(uuid())
  createdBy  String
  workoutId String
  days String[]
}
